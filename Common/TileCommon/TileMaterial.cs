using SpiritReforged.Common.Visuals;
using SpiritReforged.Content.Savanna.Tiles;

namespace SpiritReforged.Common.TileCommon;

[Autoload(Side = ModSide.Client)]
public class TileMaterial : ModSystem
{
	/// <summary> The default <see cref="Material"/> lightness value. </summary>
	public const float Default = 0.25f;

	public readonly record struct Material(Color Color, float Lightness);
	private static readonly Dictionary<int, Material> ColorByType = [];

	/// <summary> Gets the material data associated with the given type. Materials are autogenerated or can be added explicitly using <see cref="AddMaterial"/>. </summary>
	public static Material FindMaterial(int tileType)
	{
		float lightness = Default;

		if (ColorByType.TryGetValue(tileType, out var material))
		{
			lightness = material.Lightness;

			if (material.Color != default) //Do a special check for color
				return material;
		}

		var texture = TextureAssets.Tile[tileType].Value;
		return new(TextureColorCache.GetBrightestColor(texture), lightness);
	}

	/// <summary> Adds materials for the given types. </summary>
	public static void AddMaterial(Color color, float lightness, params int[] types)
	{
		foreach (int type in types)
		{
			Material m = new(color, lightness);

			if (!ColorByType.TryAdd(type, m))
				ColorByType[type] = m;
		}
	}

	public override void SetStaticDefaults() => Main.QueueMainThreadAction(() =>
	{
		AddMaterial(new Color(106, 67, 19), 0.75f, ModContent.TileType<SavannaGrass>(), ModContent.TileType<SavannaGrassMowed>(), ModContent.TileType<SavannaGrassCorrupt>(), ModContent.TileType<SavannaGrassCrimson>(), ModContent.TileType<SavannaGrassHallow>(), ModContent.TileType<SavannaGrassHallowMowed>());
		AddMaterial(new Color(151, 107, 75), 0.75f, TileID.Grass, TileID.GolfGrass, TileID.CorruptGrass, TileID.CrimsonGrass, TileID.HallowedGrass, TileID.GolfGrassHallowed);
		AddMaterial(new Color(92, 68, 73), 0.7f, TileID.JungleGrass, TileID.CorruptJungleGrass, TileID.CrimsonJungleGrass);
		AddMaterial(default, 0.75f, TileID.Sand, TileID.Ebonsand, TileID.Crimsand, TileID.Pearlsand);
		AddMaterial(default, 1f, TileID.SnowBlock);
	});
}